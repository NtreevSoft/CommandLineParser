<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ntreev.Library.CommandLineParser</name>
    </assembly>
    <members>
        <member name="T:Ntreev.Library.CommandLineParser.CommandSwitchException">
            <summary>
            유효하지 않은 스위치 또는 잘못된 인자가 사용되었을때 발생하는 예외를 나타냅니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandSwitchException.#ctor">
            <summary>
            <seealso cref="T:Ntreev.Library.CommandLineParser.CommandSwitchException"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandSwitchException.#ctor(System.String)">
            <summary>
            오류 메세지를 사용하여 <seealso cref="T:Ntreev.Library.CommandLineParser.CommandSwitchException"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="message">오류 메세지를 나타내는 문자열입니다.</param>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandSwitchException.#ctor(System.String,System.String)">
            <summary>
            오류 메세지와 오류의 원인이 되는 스위치의 이름을 사용하여 <seealso cref="T:Ntreev.Library.CommandLineParser.CommandSwitchException"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="message">오류 메세지를 나타내는 문자열입니다.</param>
            <param name="switchName">오류의 원인이 되는 스위치의 이름입니다.</param>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandSwitchException.#ctor(System.String,System.Exception)">
            <summary>
            오류 메세지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <seealso cref="T:Ntreev.Library.CommandLineParser.CommandSwitchException"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="message">오류 메세지를 나타내는 문자열입니다.</param>
            <param name="innerException">해당 예외의 근본 원인인 내부 예외에 대한 인스턴스입니다.</param>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandSwitchException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            오류 메세지와 오류의 원인이 되는 스위치의 이름 그리고 
            해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <seealso cref="T:Ntreev.Library.CommandLineParser.CommandSwitchException"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="message">오류 메세지를 나타내는 문자열입니다.</param>
            <param name="switchName">오류의 원인이 되는 스위치의 이름입니다.</param>
            <param name="innerException">해당 예외의 근본 원인인 내부 예외에 대한 인스턴스입니다.</param>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchException.SwitchName">
            <summary>
            오류의 원인이 되었던 스위치의 이름을 가져옵니다.
            </summary>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.Properties.Resources">
            <summary>
              지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.ResourceManager">
            <summary>
              이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.Culture">
            <summary>
              이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대한 현재 스레드의 CurrentUICulture
              속성을 재정의합니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.ArgSeperatorAndSwitchDelimiterCannotBeTheSame">
            <summary>
              ArgSeperator는 SwitchDelimiter과 다른 문자여야 합니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.ArgSeperatorMustBeAPunctuation">
            <summary>
              ArgSeperator는 문장부호여야만 합니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.CannotConvertFromString">
            <summary>
              타입컨버터에서 문자열에 의한 변환이 지원되질 않습니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.InvalidArgumentType">
            <summary>
              잘못된 인수 형식입니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.InvalidSwitchName">
            <summary>
              스위치의 이름은 문자 또는 숫자여야만 합니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.InvalidSwitchWasIncluded">
            <summary>
              유효하지 않은 스위치가 포함되어 있습니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.License">
            <summary>
              the MIT License http://www.opensource.org/licenses/mit-license.php.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.MutuallyExclusiveException">
            <summary>
              MutuallyExclusive가 같은 스위치는 Required 속성값이 모두 true거나 false여야 합니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.MutuallyExclusiveSwitchIsAlreadySet">
            <summary>
              같은 값의 상호배타적 스위치가 이미 설정되었습니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.NoArguments">
            <summary>
              전달인자가 한개도 포함되어 있지 않습니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.SwitchDelimiterMustBePunctuation">
            <summary>
              SwitchDelimiter 는 문장부호여야만 합니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.SwitchIsMissing">
            <summary>
              필요한 스위치가 빠져있습니다.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.SwitchWasAlreadyRegistered">
            <summary>
              스위치가 이미 등록되어 있습니다. 중복여부를 확인하세요.과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.Properties.Resources.Usage">
            <summary>
              Usage과(와) 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.MissingSwitchException">
            <summary>
            필요한 스위치가 없을때 발생하는 예외를 나타냅니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.MissingSwitchException.#ctor">
            <summary>
            <seealso cref="T:Ntreev.Library.CommandLineParser.MissingSwitchException"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.MissingSwitchException.#ctor(System.String)">
            <summary>
            오류 메세지를 사용하여 <seealso cref="T:Ntreev.Library.CommandLineParser.MissingSwitchException"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="message">오류 메세지를 나타내는 문자열입니다.</param>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.MissingSwitchException.#ctor(System.String,System.Exception)">
            <summary>
            오류 메세지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <seealso cref="T:Ntreev.Library.CommandLineParser.MissingSwitchException"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="message">오류 메세지를 나타내는 문자열입니다.</param>
            <param name="innerException">해당 예외의 근본 원인인 내부 예외에 대한 인스턴스입니다.</param>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.MissingSwitchException.#ctor(System.String,System.String)">
            <summary>
            오류 메세지와 결여된 스위치의 이름을 사용하여 <seealso cref="T:Ntreev.Library.CommandLineParser.MissingSwitchException"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="message">오류 메세지를 나타내는 문자열입니다.</param>
            <param name="switchName">결여된 스위치의 이름입니다.</param>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.MissingSwitchException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            오류 메세지와 결여된 스위치의 이름 그리고 
            해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <seealso cref="T:Ntreev.Library.CommandLineParser.MissingSwitchException"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="message">오류 메세지를 나타내는 문자열입니다.</param>
            <param name="switchName">결여된 스위치의 이름입니다.</param>
            <param name="innerException">해당 예외의 근본 원인인 내부 예외에 대한 인스턴스입니다.</param>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.UsageProvider">
            <summary>
            스위치 사용법을 제공하는 방법을 나타냅니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.UsageProvider.#ctor(Ntreev.Library.CommandLineParser.CommandSwitchDescriptor)">
            <summary>
            <seealso cref="P:Ntreev.Library.CommandLineParser.UsageProvider.SwitchDescriptor"/>를 사용하여 <seealso cref="T:Ntreev.Library.CommandLineParser.UsageProvider"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="switchDescriptor">
            스위치의 정보를 담고 있는 <seealso cref="P:Ntreev.Library.CommandLineParser.UsageProvider.SwitchDescriptor"/>의 인스턴스입니다.
            </param>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.UsageProvider.SwitchDescriptor">
            <summary>
            스위치의 정보를 담고 있는 <seealso cref="P:Ntreev.Library.CommandLineParser.UsageProvider.SwitchDescriptor"/>의 인스턴스를 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.UsageProvider.Usage">
            <summary>
            기본적인 사용방법을 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.UsageProvider.Description">
            <summary>
            기본적인 사용방법 외에 부가적인 설명을 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.UsageProvider.ArgumentTypeDescription">
            <summary>
            스위치에서 사용하는 인자형식에 대한 설명을 가져옵니다.
            </summary>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor">
            <summary>
            스위치의 정보를 담고 있는 클래스입니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor.ArgSeperator">
            <summary>
            인자와 스위치가 한 문자열내에 포함되어 있을때 이를 구분하는 문자를 가져옵니다.
            </summary>
            <remarks>
            이 속성의 값이 null이면 인자와 스위치는 공백으로 구분되어져 있습니다.
            <seealso cref="F:System.Char.MinValue"/>일 경우에는 스위치와 인자가 하나의 단어로 이루어져 있는 상태입니다.
            그외에는 <see cref="M:System.Char.IsPunctuation(System.Char)"/>의 값이 true인 문자로 구분되어집니다.
            </remarks>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor.UsageProvider">
            <summary>
            스위치의 사용 방법을 제공하는 제공자의 인스턴스를 간져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor.ShortName">
            <summary>
            스위치의 짧은 이름을 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor.Name">
            <summary>
            스위치의 이름을 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor.DisplayName">
            <summary>
            스위치의 표시 이름을 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor.Description">
            <summary>
            스위치의 부가적인 설명을 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor.Required">
            <summary>
            분석할때 해당 스위치가 꼭 필요한지에 대한 여부를 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor.Parsed">
            <summary>
            분석후 해당 스위치가 분석에 성공했는지에 대한 여부를 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor.ArgType">
            <summary>
            해당 스위치가 가지고 있는 인자의 타입을 가져옵니다.
            </summary>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.ParserAttribute">
            <summary>
            스위치에 사용할 파서의 타입을 지정합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.ParserAttribute.#ctor">
            <summary>
            <seealso cref="T:Ntreev.Library.CommandLineParser.ParserAttribute"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.ParserAttribute.#ctor(System.Type)">
            <summary>
            파서의 타입을 가지고 <seealso cref="T:Ntreev.Library.CommandLineParser.ParserAttribute"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.ParserAttribute.ParserType">
            <summary>
            파서의 타입을 나타냅니다.
            </summary>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.CommandSwitchAttribute">
            <summary>
            스위치의 속성을 지정합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandSwitchAttribute.#ctor">
            <summary>
            <seealso cref="T:Ntreev.Library.CommandLineParser.CommandSwitchAttribute"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandSwitchAttribute.#ctor(System.String)">
            <summary>
            짧은 이름을 사용하여 <seealso cref="T:Ntreev.Library.CommandLineParser.CommandSwitchAttribute"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchAttribute.ShortName">
            <summary>
            해당 스위치의 짧은 이름을 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchAttribute.ArgTypeSummary">
            <summary>
            인수 형식의 요약을 나타내는 문자열입니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchAttribute.Required">
            <summary>
            해당 스위치가 꼭 필요한지의 여부를 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchAttribute.ArgSeperator">
            <summary>
            인자가 스위치에 포함되어 있을때 인자와 스위치를 구분하기 위한 문자를 설정하거나 가져옵니다.
            </summary>
            <remarks>
            /Level6 처럼 스위치와 인자의 구분이 필요가 없다면 <seealso cref="F:System.Char.MinValue"/>를 설정하세요.
            </remarks>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandSwitchAttribute.UsageProvider">
            <summary>
            해당 스위치의 사용법 출력 제공자의 타입을 설정하거나 가져옵니다.
            </summary>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.ParsingOptions">
            <summary>
            분석 옵션을 설정하는 데 사용하는 열거형 값을 제공합니다.
            </summary>
        </member>
        <member name="F:Ntreev.Library.CommandLineParser.ParsingOptions.None">
            <summary>
            옵션이 설정되지 않도록 지정합니다.
            </summary>
        </member>
        <member name="F:Ntreev.Library.CommandLineParser.ParsingOptions.ShortNameOnly">
            <summary>
            짧은 이름을 가진 특성의 스위치만 분석합니다.
            </summary>
        </member>
        <member name="F:Ntreev.Library.CommandLineParser.ParsingOptions.CaseSensitive">
            <summary>
            분석할때 스위치 이름의 대소문자를 구분합니다.
            </summary>
        </member>
        <member name="F:Ntreev.Library.CommandLineParser.ParsingOptions.NoExecutionPath">
            <summary>
            전달인자 문자열에 실행 경로가 포함되지 않습니다.
            </summary>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.Parser">
            <summary>
            문자열을 분석하여 데이터로 변환할 수 있는 방법을 제공합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.Parser.#ctor">
            <summary>
            <seealso cref="T:Ntreev.Library.CommandLineParser.Parser"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.Parser.Parse(Ntreev.Library.CommandLineParser.CommandSwitchDescriptor,System.String,System.Object)">
            <summary>
            문자열을 분석하여 데이터로 변환합니다.
            </summary>
            <param name="switchDescriptor">분석할 스위치의 정보를 담고 있는<seealso cref="T:Ntreev.Library.CommandLineParser.CommandSwitchDescriptor"/>의 인스턴스입니다.</param>
            <param name="arg">분석할 문자열을 나타냅니다.</param>
            <param name="value">분석할 스위치와 연결되어 있는 데이터의 원본값 입니다.</param>
            <returns>문자열을 데이터로 변환한 값 입니다.</returns>
            <exception cref="T:System.NotSupportedException">문자열을 데이터로 변환할 수 없을때</exception>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.CommandLineParser">
            <summary>
            커맨드 라인을 분석할 수 있는 방법을 제공합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandLineParser.#ctor">
            <summary>
            <seealso cref="T:Ntreev.Library.CommandLineParser.CommandLineParser"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandLineParser.TryParse(System.String,System.Object)">
            <summary>
            문자열을 분석하여 데이터로 변환합니다.
            </summary>
            <returns>
            모든 과정이 성공하면 true를, 그렇지 않다면 false를 반환합니다.
            </returns>
            <param name="commandLine">
            실행파일의 경로와 인자가 포함되어 있는 전체 문자열입니다.
            </param>
            <param name="options">
            데이터를 설정할 속성과 스위치 특성이 포함되어 있는 인스턴스입니다.
            </param>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandLineParser.TryParse(System.String,System.Object,Ntreev.Library.CommandLineParser.ParsingOptions)">
            <summary>
            문자열을 분석하여 데이터로 변환합니다.
            </summary>
            <returns>
            모든 과정이 성공하면 true를, 그렇지 않다면 false를 반환합니다.
            </returns>
            <param name="commandLine">
            실행파일의 경로와 인자가 포함되어 있는 전체 문자열입니다.
            </param>
            <param name="options">
            데이터를 설정할 속성과 스위치 특성이 포함되어 있는 인스턴스입니다.
            </param>
            <param name="parsingOptions">
            문자열을 분석하기 위한 옵션입니다.
            </param>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandLineParser.Parse(System.String,System.Object)">
            <summary>
            문자열을 분석하여 데이터로 변환합니다.
            </summary>
            <param name="commandLine">
            실행파일의 경로와 인자가 포함되어 있는 전체 문자열입니다.
            </param>
            <param name="options">
            데이터를 설정할 속성과 스위치 특성이 포함되어 있는 인스턴스입니다.
            </param>
            <exception cref="T:Ntreev.Library.CommandLineParser.CommandSwitchException">
            스위치의 인자가 문자열에 의한 변환을 지원하지 않거나 변환할 수 없는 경우
            </exception>
            <exception cref="T:System.ArgumentException">
            commandLine에 전달 인자가 하나도 포함되어 있지 않은 경우
            </exception>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandLineParser.Parse(System.String,System.Object,Ntreev.Library.CommandLineParser.ParsingOptions)">
            <summary>
            문자열을 분석하여 데이터로 변환합니다.
            </summary>
            <param name="commandLine">
            실행파일의 경로와 인자가 포함되어 있는 전체 문자열입니다.
            </param>
            <param name="options">
            데이터를 설정할 속성과 스위치 특성이 포함되어 있는 인스턴스입니다.
            </param>
            <param name="parsingOptions">
            문자열을 분석하기 위한 옵션입니다.
            </param>
            <exception cref="T:Ntreev.Library.CommandLineParser.CommandSwitchException">
            스위치의 인자가 문자열에 의한 변환을 지원하지 않거나 변환할 수 없는 경우
            </exception>
            <exception cref="T:System.ArgumentException">
            commandLine에 전달 인자가 하나도 포함되어 있지 않은 경우
            </exception>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandLineParser.PrintSwitchUsage(System.String)">
            <summary>
            스위치의 사용법을 출력합니다.
            </summary>
            <param name="switchName">
            사용법을 출력할 스위치의 문자열입니다.
            </param>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandLineParser.PrintUsage">
            <summary>
            모든 스위치의 사용법을 출력합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandLineParser.OnParsingUnusedArgument(System.String)">
            <summary>
            사용되지 않은 인자들을 처리 합니다.
            </summary>
            <param name="arg">
            사용되지 않은 인자의 문자열입니다.
            </param>
            <remarks>
            일반적으로 명령의 형태는 /cmd arg 처럼 스위치와 인자 하나씩 존재합니다.
            만약 /cmd arg1 arg2 와 같은 형태로 되 있다면 arg2는 분석에서 제외됩니다.
            여러개의 인자로 받을 경우에는 /cmd "arg1 arg2" 처럼 따옴표로 인자들을 묶어줄 필요가 있습니다.
            </remarks>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.CommandLineParser.AssertValidation(System.Object)">
            <summary>
            최종적으로 옵션에 유효성을 검사합니다.
            </summary>
            <param name="options">
            분석에 사용된 인스턴스입니다.
            </param>
            <returns>
            분석후 option에 대한 설정 과정이 정상적으로 끝났으면 true를, 그렇지 않다면 false를 반환합니다.
            </returns>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandLineParser.TextWriter">
            <summary>
            분석과정중 생기는 다양한 정보를 출력할 수 있는 처리기를 지정합니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandLineParser.UnusedArguments">
            <summary>
            분석중 사용되지 않은 인자들을 가져옵니다.
            </summary>
        </member>
        <member name="P:Ntreev.Library.CommandLineParser.CommandLineParser.Usage">
            <summary>
            사용방법을 출력하는 방법을 나타내는 인스턴를 가져옵니다.
            </summary>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.CommandLineParser.UsagePrinter">
            <summary>
            사용방법을 설정할 수 있는 방법을 제공합니다.
            </summary>
        </member>
        <member name="T:Ntreev.Library.CommandLineParser.ListParser">
            <summary>
            문자열을 리스트 형식으로 변환하는 방법을 제공합니다.
            </summary>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.ListParser.SplitArgument(System.String)">
            <summary>
            문자열에서 항목별 문자열로 분리합니다.
            </summary>
            <param name="arg">항목별 문자열이 담긴 문자열입니다.</param>
            <returns>분리된 항목별 문자열의 배열입니다.</returns>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.ListParser.OnItemParse(System.String,System.Type)">
            <summary>
            항목별 문자열을 데이터로 변환합니다.
            </summary>
            <param name="arg"></param>
            <param name="itemType">항목의 데이터 형식을 나타냅니다.</param>
            <returns>항목을 나타내는 문자열을 데이터로 변환한 값을 나타냅니다.</returns>
        </member>
        <member name="M:Ntreev.Library.CommandLineParser.ListParser.GetItemType(System.Type)">
            <summary>
            속성의 타입이 리스트 형태일때 항목의 타입을 가져옵니다.
            </summary>
            <param name="propertyType">리스트를 나타내는 타입입니다.</param>
            <returns>리스트 형식의 타입이면 항목의 타입을 반환합니다. 그렇지 않다면 null을 반환합니다.</returns>
        </member>
    </members>
</doc>
